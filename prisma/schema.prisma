generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Classification2ndLay {
  pmid        Int         @unique(map: "PMID") @map("PMID")
  score       Decimal     @db.Decimal(8, 7)
  probability Decimal     @db.Decimal(8, 7)
  other__     Int
  otherTerms  String?     @db.VarChar(2000)
  known__     Int
  knownTerms  String?     @db.VarChar(2000)
  coverage    String      @db.VarChar(10)
  metadataPub MetadataPub @relation(fields: [pmid], references: [pmid], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMID2ndLay")

  @@index([probability], map: "idx_classification_2ndLay_probability")
  @@map("classification_2ndLay")
}

model Classification1stLay {
  pmid        Int         @unique(map: "PMID") @map("PMID")
  score       Decimal     @db.Decimal(8, 7)
  probability Decimal     @db.Decimal(8, 7)
  other__     Int
  otherTerms  String?     @db.VarChar(2000)
  known__     Int
  knownTerms  String?     @db.VarChar(2000)
  coverage    String      @db.VarChar(10)
  metadataPub MetadataPub @relation(fields: [pmid], references: [pmid], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMID1stLay")

  @@index([probability], map: "idx_classifications_1stLay_probability")
  @@map("classifications_1stLay")
}

model GeneIDToPMID {
  pmid          Int           @map("PMID")
  geneID        Int           @map("geneIDs")
  metadataPub   MetadataPub   @relation(fields: [pmid], references: [pmid], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMIDgeneIDs")
  taxIDsAccNumb TaxIDToAccNumb @relation(fields: [geneID], references: [geneID], onDelete: NoAction, onUpdate: NoAction, map: "geneIDs_PMIDs_ibfk_2")

  @@id([pmid, geneID])
  @@index([geneID], map: "geneIDs")
  @@index([pmid, geneID], map: "idx_geneIDs_PMIDs_PMID_geneIDs")
  @@map("geneIDs_PMIDs")
}

model MetadataPub {
  pmid                   Int                     @id @map("PMID")
  title                  String                  @db.VarChar(2000) @map("Titles")
  abstract               String?                 @db.VarChar(10000) @map("Abstract")
  pubDate                String?                 @db.VarChar(15) @map("PubDate")
  yearPub                Int?                    @map("YearPub")
  lastAuthor             String?                 @db.VarChar(30) @map("LastAuthor")
  journalAbbrev          String?                 @db.VarChar(70) @map("Journal_Abbrev")
  journal                String?                 @db.VarChar(100) @map("Journal")
  volume                 String?                 @db.VarChar(30) @map("Volume")
  issue                  String?                 @db.VarChar(30) @map("Issue")
  pages                  String?                 @db.VarChar(30) @map("Pages")
  languagePub            String?                 @db.VarChar(30) @map("LanguagePub")
  citations              Int?                    @map("Citations")
  classification2ndLay   Classification2ndLay?
  classification1stLay   Classification1stLay?
  geneIDToPMID           GeneIDToPMID[]          

  @@index([pmid], map: "PMID")
  @@index([yearPub, lastAuthor, citations], map: "idx_metadataPub_YearPub_LastAuthor_Citations")
  @@map("metadataPub")
}

model TaxIDToAccNumb {
  geneID        Int             @id @map("geneIDs")
  orgTaxName    String?         @db.VarChar(200) @map("OrgTaxName")
  taxID         Int?            @map("TaxID")
  accNumb       String?         @db.VarChar(2000) @map("AccNumb")
  taxPath       TaxPath?        @relation(fields: [taxID], references: [taxID], onDelete: NoAction, onUpdate: NoAction, map: "taxIDsAccNumb_ibfk_1")
  geneIDToPMID  GeneIDToPMID[]

  @@index([taxID], map: "TaxID")
  @@index([orgTaxName], map: "idx_taxIDsAccNumb_OrgTaxName")
  @@map("taxIDsAccNumb")
}

model TaxPath {
  taxID         Int             @id @map("TaxID")
  orgLineage    String?         @db.VarChar(3000) @map("OrgLineage")
  lineagePath   String?         @db.VarChar(3000) @map("LineagePath")
  taxIDsAccNumb TaxIDToAccNumb[]
  @@map("taxPath")
}
