generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model classification_2ndLay {
  PMID        Int         @unique(map: "PMID")
  score       Decimal     @db.Decimal(8, 7)
  probability Decimal     @db.Decimal(8, 7)
  other__     Int
  otherTerms  String?     @db.VarChar(2000)
  known__     Int
  knownTerms  String?     @db.VarChar(2000)
  coverage    String      @db.VarChar(10)
  metadataPub metadataPub @relation(fields: [PMID], references: [PMID], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMID2ndLay")

  @@index([probability], map: "idx_classification_2ndLay_probability")
}

model classifications_1stLay {
  PMID        Int         @unique(map: "PMID")
  score       Decimal     @db.Decimal(8, 7)
  probability Decimal     @db.Decimal(8, 7)
  other__     Int
  otherTerms  String?     @db.VarChar(2000)
  known__     Int
  knownTerms  String?     @db.VarChar(2000)
  coverage    String      @db.VarChar(10)
  metadataPub metadataPub @relation(fields: [PMID], references: [PMID], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMID1stLay")

  @@index([probability], map: "idx_classifications_1stLay_probability")
}

model geneIDs_PMIDs {
  PMID          Int
  geneIDs       Int
  metadataPub   metadataPub   @relation(fields: [PMID], references: [PMID], onDelete: NoAction, onUpdate: NoAction, map: "fkMetadataPubPMIDgeneIDs")
  taxIDsAccNumb taxIDsAccNumb @relation(fields: [geneIDs], references: [geneIDs], onDelete: NoAction, onUpdate: NoAction, map: "geneIDs_PMIDs_ibfk_2")

  @@id([PMID, geneIDs])
  @@index([geneIDs], map: "geneIDs")
  @@index([PMID, geneIDs], map: "idx_geneIDs_PMIDs_PMID_geneIDs")
}

model metadataPub {
  PMID                   Int                     @id
  Titles                 String                  @db.VarChar(2000)
  Abstract               String?                 @db.VarChar(10000)
  PubDate                String?                 @db.VarChar(15)
  YearPub                Int?
  LastAuthor             String?                 @db.VarChar(30)
  Journal_Abbrev         String?                 @db.VarChar(70)
  Journal                String?                 @db.VarChar(100)
  Volume                 String?                 @db.VarChar(30)
  Issue                  String?                 @db.VarChar(30)
  Pages                  String?                 @db.VarChar(30)
  LanguagePub            String?                 @db.VarChar(30)
  Citations              Int?
  classification_2ndLay  classification_2ndLay?
  classifications_1stLay classifications_1stLay?
  geneIDs_PMIDs          geneIDs_PMIDs[]

  @@index([PMID], map: "PMID")
  @@index([YearPub, LastAuthor, Citations], map: "idx_metadataPub_YearPub_LastAuthor_Citations")
}

model taxIDsAccNumb {
  geneIDs       Int             @id
  OrgTaxName    String?         @db.VarChar(200)
  TaxID         Int?
  AccNumb       String?         @db.VarChar(2000)
  taxPath       taxPath?        @relation(fields: [TaxID], references: [TaxID], onDelete: NoAction, onUpdate: NoAction, map: "taxIDsAccNumb_ibfk_1")
  geneIDs_PMIDs geneIDs_PMIDs[]

  @@index([TaxID], map: "TaxID")
  @@index([OrgTaxName], map: "idx_taxIDsAccNumb_OrgTaxName")
}

model taxPath {
  TaxID         Int             @id
  OrgLineage    String?         @db.VarChar(3000)
  LineagePath   String?         @db.VarChar(3000)
  taxIDsAccNumb taxIDsAccNumb[]
}
